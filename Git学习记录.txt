Svn和Git的差别：
（1）SVN 记录的是基本文件和每个版本和基本文件的差异；Git记录的每个版本所有文件的快照
（2）Git所有操作的是在本地进行的，本地会记录所有版本信息
（3）Git所有数据在保存之前都计算文件的完整性,通过SHA-1来检验文件的完整性
（4）Git几乎只执行增加操作，很少会有不可逆的操作发生
（5）Git文件只存在三种状态：
		a.已提交(commited)表示已经安全的保存在本地仓库中
		b.已修改(modified)表示已修改了文件但是没保存到数据库中
		c.已暂存(staged)对已经修改的文件做了标记，使之包含在下次提交的快照中
（6）Git 采用clone获取仓库的拷贝，克隆的是仓库的所有文件包括每个文件的每个版本；SVN采用checkout获取仓库，只会下载所需要的文件内容   
 (7)Git工作目录下面的文件无非两种状态：未跟踪和已跟踪
 (8)Git常用指令：
 		a. git add files  该指令参数为文件目录或文件名称，如果参数为文件目录，则递归跟踪该目录下所有文件 该指令可以见文件进行跟踪或者将文件置为暂存状态，还可以在合并文件的时候把冲突文件标志为已解决
 		b. git status     查看当前目录所有文件的状态  可选参数git status -s 结果中??表示未跟踪，A表示新加到暂存区的文件，M表示修改过的文件，MM 其中第一个M表示文件修改后放入了暂存区，第二个M表示文件修改后尚未放入暂存区
 		c. git commit     只会提交最后一次运行了git add命令的版本，每次修订后多需要运行git add 命令后才能提交最后一次修订的版本；如果想要跳过git add 直接进行提交，可以加入选项 git commit -a -m "readme"  -a 跳过git add选项，-m 添加提交说明
 		d. .gitignore     创建忽略文件列表
 		e. git diff       通过文件补丁的方式显示文件哪些行发生了变化，比较的是修改后的文件内容和暂存区域的文件快照的文件内容区别  
 						  可选参数 --cached或者--staged  查看已暂存的将要添加到下次提交里的内容，比较的是已提交的和暂存区文件内容差别
 		f. git rm         从跟踪目录中移除文件，可以加入的选项： --cached 只是从git中删除文件，磁盘上保留文件；-f 用于强制删除本地已经修改过的文件
 		g. git mv         移动文件 git mv from_file to_file 可以为文件重命名， 相当于三条指令：（1）mv from_file to_file (2)git rm from_file (2)git add to_file
 		h. git log        查看提交历史，英文状态下字母q退出，
 						  选项 -p 显示每次条件文件的差异，git log -p -2 显示最近两次提交的文件差异
 						  选项--stat 显示每次提交简略的统计信息
 						  选项--pretty 指定显示提交历史的不同格式，可选值包括oneline,short,full,fuller,format 例如git log --pretty=oneline
			 						  format 常用选项如下：
			 						  %H 提交对象（commit）的完整哈希字串
									  %h 提交对象的简短哈希字串
									  %T 树对象（tree）的完整哈希字串
									  %t 树对象的简短哈希字串
									  %P 父对象（parent）的完整哈希字串
									  %p 父对象的简短哈希字串
									  %an 作者（author）的名字
									  %ae 作者的电子邮件地址
									  %ad 作者修订日期（可以用 --date= 选项定制格式）
									  %ar 作者修订日期，按多久以前的方式显示
									  %cn 提交者（committer）的名字 
									  %ce 提交者的电子邮件地址
									  %cd 提交日期
									  %cr 提交日期，按多久以前的方式显示
									  %s 提交说明
						选项 --shortstat 只显示 --stat 中最后的行数修改添加移除统计。
						选项	--name-only 仅在提交信息后显示已修改的文件清单。
						选项	--name-status 显示新增、修改、删除的文件清单。
						选项	--abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。
						选项	--relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。
						选项	--graph 显示 ASCII 图形表示的分支合并历史。
						选项	--pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。
						选项 限制长度 -n 只显示最后n条提交记录 --since 从哪个时间开始  --util 直到哪个时间结束
						选项 -(n) 仅显示最近的 n 条提交
						选项--since, --after 仅显示指定时间之后的提交。
						选项--until, --before 仅显示指定时间之前的提交。
						选项--author 仅显示指定作者相关的提交。
						选项--committer 仅显示指定提交者相关的提交。
						选项--grep 仅显示含指定关键字的提交
						选项 -S 仅显示添加或移除了某个关键字的提交